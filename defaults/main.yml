
k3s_is_apiserver: false
k3s_is_worker: false
k3s_is_first_apiserver: false

k3s_config_file: /etc/rancher/k3s/config.yaml

kubeconfig_location: /etc/kubernetes/kubeconfig

kube_local_storage_dir: /var/local/k8s-data/

k3s_data_dir: /var/lib/rancher/k3s

k3s_datastore_endpoint: sqlite

# define this
k3s_agent_token: ~
k3s_agent_token_file: /etc/kubernetes/agent-token

# and consider defining this
k3s_cluster_token: ~
k3s_cluster_token_file: /etc/kubernetes/cluster-token


k3s_distribution_url:
  https://github.com/k3s-io/k3s/releases/download/v1.24.3%2Bk3s1/k3s
k3s_checksum:
  sha256:99dde3fab7201e4b9aefc1a14ca97710c06d8cbcb6f127e14570086f2259616c

kube_taint_apiserver_nodes: false

kube_cluster_cidr: 172.19.0.0/16
kube_service_cidr: 172.22.0.0/16
kube_cluster_dns: 172.22.53.53
kube_cluster_domain: cluster.local

k3s_apiserver_server: https://127.0.0.1:6443/

k3s_disable_flannel: false
k3s_disable_kubeproxy: false
k3s_disable_local_storage: false

kube_node_external_ip: '127.0.0.1'
kube_node_ip: '127.0.0.1'

# extra names to add to certificate
kube_extra_sans:
  - '{{ ansible_fqdn }}'

k3s_node_name: '{{ ansible_fqdn }}'

kubernetes_sysctls:
  - #name: "Pass bridged IPv4 traffic to iptables"
    key: net.bridge.bridge_nf_call_iptables
    value: 1
  - #name: "Arp flux with multiple interfaces"
    key: net.ipv4.conf.default.arp_announce
    value: 1
  - #name: "Arp flux with multiple interfaces"
    key: net.ipv4.conf.all.arp_announce
    value: 1
  - #name: "Arp flux with multiple interfaces"
    key: net.ipv4.conf.default.arp_ignore
    value: 2
  - #name: "Arp flux with multiple interfaces"
    key: net.ipv4.conf.all.arp_ignore
    value: 2
  - #name: "Enable rp-filter (kube-router)"
    key: net.ipv4.conf.all.rp_filter
    value: 1
  - #name: "Enable rp-filter (kube-router)"
    key: net.ipv4.conf.default.rp_filter
    value: 1

k3s_link_kubectl: true
k3s_link_crictl: true
k3s_link_ctr: true

# Add these lines to the end of config.yaml
k3s_extra_config: {}
  # # example
  # snapshotter: "zfs"
  # container-runtime-endpoint: /run/containerd/containerd.sock

